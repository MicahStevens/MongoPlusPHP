<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-08 at 00:40:33.
 */

require('../MongoCollectionPlus.class.php');
class testCollection extends MongoCollectionPlus {
	protected $collectionName = 'MongoCollectionPlusTest';
    protected $default = array(
        'name'=>'',
        'version'=>0,
        'color'=>'not specified'
    );
    protected $onBeforeInsert = array(
        'setLastUpdate'
    );
    protected $onBeforeUpdate = array(
        'setLastUpdate'
    );
    /** make sure we always know when the data was updated */
    protected function setLastUpdate()
    {
        $this->set('version', $this->get('version') + 1);
    }
}
class MongoCollectionPlusTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var MongoCollectionPlus
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $mongo = new MongoClient();
        $this->collection = new testCollection($mongo->test);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->collection->drop();
    }

    /**
     * @covers MongoCollectionPlus::getCollectionName
     * @todo   Implement testGetCollectionName().
     */
    public function testGetCollectionName()
    {
        $this->assertEquals($this->collection->getCollectionName(), 'MongoCollectionPlusTest');
    }

    /**
     * @covers MongoCollectionPlus::getDefaultFields
     * @todo   Implement testGetDefaultFields().
     */
    public function testGetDefaultFields()
    {
        $this->assertEquals($this->collection->getDefaultFields(), array(
            'name'=>'',
            'version'=>0,
            'color'=>'not specified'
        ));
    }

    /**
     * @covers MongoCollectionPlus::inc
     * @todo   Implement testInc().
     */
    public function testInc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::dec
     * @todo   Implement testDec().
     */
    public function testDec()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::insert
     * @todo   Implement testInsert().
     */
    public function testInsert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::update
     * @todo   Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::remove
     * @todo   Implement testRemove().
     */
    public function testRemove()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::loadRow
     * @todo   Implement testLoadRow().
     */
    public function testLoadRow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::findOne
     * @todo   Implement testFindOne().
     */
    public function testFindOne()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::select
     * @todo   Implement testSelect().
     */
    public function testSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::find
     * @todo   Implement testFind().
     */
    public function testFind()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::findObjects
     * @todo   Implement testFindObjects().
     */
    public function testFindObjects()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::unLoad
     * @todo   Implement testUnLoad().
     */
    public function testUnLoad()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::set
     * @todo   Implement testSet().
     */
    public function testSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::getByPath
     * @todo   Implement testGetByPath().
     */
    public function testGetByPath()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::setByPath
     * @todo   Implement testSetByPath().
     */
    public function testSetByPath()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::hasKey
     * @todo   Implement testHasKey().
     */
    public function testHasKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::valueMerge
     * @todo   Implement testValueMerge().
     */
    public function testValueMerge()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::relevancySearch
     * @todo   Implement testRelevancySearch().
     */
    public function testRelevancySearch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::mongoRelevancySort
     * @todo   Implement testMongoRelevancySort().
     */
    public function testMongoRelevancySort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MongoCollectionPlus::castBool
     * @todo   Implement testCastBool().
     */
    public function testCastBool()
    {
        // Remove the following lines when you implement this test.
        $this->assertTrue($this->collection->castBool('True'));
		$this->assertTrue($this->collection->castBool(1));
		$this->assertTrue($this->collection->castBool('foo'));
		$this->assertTrue($this->collection->castBool('yes'));
		$this->assertFalse($this->collection->castBool('false'));
		$this->assertFalse($this->collection->castBool(array()));
		$this->assertFalse($this->collection->castBool(0));
		$this->assertFalse($this->collection->castBool(''));
		$this->assertFalse($this->collection->castBool('no'));

    }

    /**
     * @covers MongoCollectionPlus::castMongoId
     * @todo   Implement testCastMongoId().
     */
    public function testCastMongoId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
